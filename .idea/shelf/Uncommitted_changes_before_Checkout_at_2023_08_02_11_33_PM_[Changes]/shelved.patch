Index: src/Routes/Home.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { useQuery } from \"react-query\";\nimport {getMovies, IGetMoviesResult} from \"../api\";\nimport styled from \"styled-components\";\nimport {makeIamgePath} from \"../utilities\";\nimport {AnimatePresence, motion, useScroll} from \"framer-motion\"\nimport {useState} from \"react\";\nimport {useNavigate} from \"react-router\";\nimport {useMatch} from \"react-router-dom\";\n\nconst Wrapper = styled.div`\n  background-color: black;\n`\n\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Banner = styled.div<{bgPhoto : string}>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n  background-image: linear-gradient(0deg, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.7)), url(${props => props.bgPhoto});\n  background-size: cover;\n`\n\nconst Title = styled.h2`\n  font-size: 48px;\n  margin-bottom: 20px;\n`\n\nconst Overview = styled.p`\n  font-size: 20px;\n  width: 50%;\n`\n\nconst Slider = styled.div`\n  position: relative;\n  top: -150px\n`\n\nconst Row = styled(motion.div)`\n  width: 100%;\n  display: grid;\n  gap: 10px;\n  grid-template-columns: repeat(6, 1fr);\n  position : absolute;\n  \n`\n\nconst Box = styled(motion.div)<{bgPhoto : string}>`\n  background-color: white;\n  height: 200px;\n  font-size: 40px;\n  font-weight: 600;\n  background-image: url(${props => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`\n\nconst Info = styled(motion.div)`\n  width: 100%;\n  padding: 20px;\n  background-color: ${props => props.theme.black.darker };\n  opacity: 0;\n  position: absolute;\n  h4 {\n    text-align: center;\n    font-size: 10px;\n  }\n  \n`\n\nconst rowVariants = {\n    hidden : {\n        x: window.outerWidth + 10\n\n    },\n    visible : {\n        x: 0,\n    },\n    exit : {\n        x: -window.outerWidth - 10,\n    }\n}\n\nconst boxVariants = {\n    normal : {\n        scale : 1,\n    },\n    hover: {\n        scale: 1.3,\n        y:  -50,\n        transition: {\n            delay : 0.3,\n            type: \"tween\"\n        }\n    }\n}\n\nconst infoVariants = {\n    hover: {\n        opacity: 1,\n        transition: {\n            delay : 0.3,\n            type: \"tween\"\n        }\n    }\n}\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`\n\nconst BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 80vw;\n  height: 60vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  background-color: ${props => props.theme.black.darker};\n`\n\nconst BigTitle = styled.h3`\n  color: ${props => props.theme.white.lighter};\n  text-align: center;\n  font-size: 20px;\n`\n\nconst BigCover = styled.div<{img : string}>`\n  background-size: cover;\n  background-position: center center ;\n  background-image: linear-gradient(180deg ,rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)), url(${props => props.img});\n  width: 100%;\n  height: 400px;\n`\n\nconst BigOverview = styled.p`\n  padding: 20px;\n  color: ${props => props.theme.white.lighter}\n`\n\nconst offset : number = 6;\n\n\nfunction Home() {\n    const { data, isLoading } = useQuery<IGetMoviesResult>(['movies', 'nowPlaying'], getMovies);\n    const [ index, setIndex ] = useState(0)\n    const [ leaving, setLeaving ] = useState(false);\n    const navigate = useNavigate();\n    const bigMovieMatch = useMatch(\"/movies/:movieId\");\n    const { scrollY, } = useScroll();\n    const clickedMovie = bigMovieMatch?.params.movieId && data?.results.find(movie => String(movie.id) === bigMovieMatch.params.movieId);\n\n    const increaseIndex = () => {\n        if (data) {\n            if (leaving) return;\n            toggleLeaving();\n            const totalMovies = data?.results.length;\n            const maxIndex = Math.floor(totalMovies / offset);\n            setIndex((prev) => (prev === maxIndex ? 0 : ++prev));\n        }\n    }\n    const toggleLeaving = () => {\n        setLeaving((prev) => !prev);\n    }\n    const onBoxClicked = (movieId : number) => {\n        navigate(`/movies/${movieId}`)\n    }\n\n    const onOverlayClick = () => {\n        navigate(`/`);\n    }\n\n    return (\n        <Wrapper>\n            {isLoading ?\n                <Loader>Loading</Loader>\n                :\n                <>\n                    <Banner bgPhoto={makeIamgePath(data?.results[0].backdrop_path || \"\") }>\n                        <Title>{data?.results[0].title}</Title>\n                        <Overview>{data?.results[0].overview}</Overview>\n                    </Banner>\n                    <Slider onClick={increaseIndex}>\n                        <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n                            <Row\n                                key={index}\n                                variants={rowVariants}\n                                transition={{type:\"spring\", duration: 1}}\n                                initial = \"hidden\"\n                                animate = \"visible\"\n                                exit = \"exit\"\n                            >\n                                {data?.results.slice(1).slice(offset*index, offset*( index + 1 )).map((movie) => (\n                                    <Box\n                                        layoutId={movie.id + \"\"}\n                                        key={movie.id}\n                                        variants={boxVariants}\n                                        initial=\"normal\"\n                                        whileHover=\"hover\"\n                                        transition={{type: \"tween\"}}\n                                        bgPhoto={makeIamgePath(movie.backdrop_path|| \"\", \"w400\")}\n                                        onClick={() => onBoxClicked(movie.id)}\n                                    >\n                                        <Info\n                                            variants={infoVariants}\n                                        >\n                                            <h4>{movie.title}</h4>\n                                        </Info>\n                                    </Box>\n                                ))}\n                            </Row>\n                        </AnimatePresence>\n                    </Slider>\n                    <AnimatePresence>\n                        {bigMovieMatch ?\n                            <>\n                                <Overlay\n                                    onClick={onOverlayClick}\n                                    animate={{ opacity: 1}}\n                                    exit={{ opacity: 0}}\n                                />\n                                <BigMovie\n                                layoutId={bigMovieMatch.params.movieId}\n                                style={{ top: scrollY.get() + 100 }}\n                                >\n                                    {clickedMovie &&\n                                        <>\n                                            <BigCover img={makeIamgePath(clickedMovie.backdrop_path, \"w500\")} />\n                                            <BigTitle>{clickedMovie.title}</BigTitle>\n                                            <BigOverview>{clickedMovie.overview}</BigOverview>\n                                        </>\n                                    }\n\n                                </BigMovie>\n                            </>\n                            :\n                            null\n                        }\n                    </AnimatePresence>\n                </>\n            }\n        </Wrapper>\n    )\n}\n\nexport default Home;
===================================================================
diff --git a/src/Routes/Home.tsx b/src/Routes/Home.tsx
--- a/src/Routes/Home.tsx	
+++ b/src/Routes/Home.tsx	
@@ -18,6 +18,7 @@
   align-items: center;
 `
 
+
 const Banner = styled.div<{bgPhoto : string}>`
   height: 100vh;
   display: flex;
